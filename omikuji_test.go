package omikuji

import (
	"strconv"
	"strings"
	"testing"
)

func TestModel(t *testing.T) {

	model := Open("/home/onclue/go/src/github.com/onclue/omikuji/examples/model")
	t.Logf("model = %v\n", model)

	ids, vals := getTestSample()
	labels, scores := model.PredictDefault(ids, vals)

	t.Logf("labels: %v\n", labels)
	t.Logf("scores: %v\n", scores)
}

func getTestSample() ([]uint32, []float32) {
	// line 1 from eurlex_test.txt
	sample := "0:0.101468 1:0.554374 2:0.235760 3:0.065255 8:0.152305 10:0.155051 11:0.182930 13:0.213172 14:2.387193 15:0.274654 16:0.320825 17:7.357962 18:0.703709 21:0.387763 22:0.395067 23:0.395835 24:2.408891 25:1.706011 28:0.480267 32:0.573815 35:0.601828 36:1.209536 38:1.853994 39:1.256342 40:0.641498 41:2.594452 42:1.329340 45:1.392852 46:2.796782 47:4.213226 49:1.469432 50:5.163156 51:0.749067 52:1.511539 55:2.342340 56:0.784045 62:0.802709 63:1.607469 66:9.039001 68:0.834610 71:0.846858 74:1.733487 75:2.609672 78:0.893467 81:0.901923 82:0.916176 83:1.846181 85:0.926276 91:1.915300 92:0.959747 96:0.980810 98:1.005775 101:1.019688 107:4.198337 109:4.202933 112:1.062628 113:1.075171 118:2.216034 119:1.116926 121:2.259992 132:21.394211 136:1.202997 147:1.233285 148:4.939452 151:1.248179 154:5.031318 160:11.500435 168:1.303715 169:3.916860 180:2.681544 181:1.342090 192:1.376522 195:4.137767 199:5.649672 203:1.425233 214:2.941845 226:3.016211 230:3.039701 233:1.532266 239:1.539737 253:6.361078 257:4.778424 277:4.918024 285:3.332659 287:1.668155 333:3.537310 341:1.784265 358:3.640251 363:3.665938 377:1.871400 398:3.842247 405:1.934944 417:1.957462 424:9.861053 430:5.943995 439:6.004578 454:36.650097 461:2.046731 504:14.870580 510:2.129668 557:6.646090 558:4.430726 562:4.457217 567:2.232349 568:4.466840 588:2.266103 590:2.267765 600:2.293040 608:2.305633 610:2.313731 622:11.659485 644:2.370479 650:9.501634 665:7.180449 678:2.413814 729:2.517892 740:2.533685 742:2.535134 743:2.538036 776:2.575805 787:2.591781 794:5.194326 808:2.617413 829:2.654276 880:2.729704 985:22.986771 1035:5.881197 1066:2.978255 1128:18.283007 1149:64.635139 1167:9.309353 1310:3.275767 1354:3.312923 1483:6.892008 1535:3.497772 1576:3.542396 1751:3.708188 1826:33.894321 1869:3.798826 1973:23.239969 2119:19.983257 2235:4.077997 2410:4.185243 3403:4.816212 4389:5.276336 4752:5.408264"
	entries := strings.Fields(sample)
	ids := make([]uint32, len(entries))
	vals := make([]float32, len(entries))
	for i := 0; i < len(entries); i++ {
		e := strings.Split(entries[i], `:`)
		id, _ := strconv.Atoi(e[0])
		ids[i] = uint32(id)
		val, _ := strconv.ParseFloat(e[1], 32)
		vals[i] = float32(val)
	}
	return ids, vals
}
